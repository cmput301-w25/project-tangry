name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: code
      
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: code

  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: code
      
    - name: Run unit tests
      run: ./gradlew test
      working-directory: code
      
    - name: Upload unit test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: code/app/build/reports/tests/
  
  instrumented-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Enable KVM  
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    
    - name: Setup node
      uses: actions/setup-node@v4
    
    - name: Install and Run Firebase
      run: npm install -g firebase-tools
          # Create firebase.json if it doesn't exist
          
    - name: Set up Firebase configuration
      run: |
        if [ ! -f firebase.json ]; then
          echo '{
            "emulators": {
              "firestore": {
                "port": 8080
              },
              "auth": {
                "port": 9099
              },
              "ui": {
                "enabled": true,
                "port": 4000
              }
            }
          }' > firebase.json
        fi
        
    - name: Start Firebase Emulator
      run: firebase emulators:start &
      working-directory: code
      
    - name: Wait for emulators
      run: sleep 10s

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: code
      
    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.notPackage="com.example.tangry.uitests"
        working-directory: code
        
    - name: Upload instrumentation test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: instrumented-test-results
        path: code/app/build/reports/androidTests/connected/
