name: Firebase Emulator Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      # Set up Node.js for Firebase emulator
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      # Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      
      # Create a simple firebase.json for emulators
      - name: Create firebase.json
        run: |
          echo '{
            "emulators": {
              "firestore": { "port": 8080 }
            }
          }' > firebase.json
      
      # Make gradlew executable
      - name: Make Gradle executable
        run: chmod +x code/gradlew
      
      # Start Firebase Emulator
      - name: Start Firebase Emulators
        run: firebase emulators:start --project demo-project &
      
      # Wait for emulator to start
      - name: Wait for Emulators
        run: sleep 10s

      # Run unit tests first
      - name: Run Unit Tests
        working-directory: ./code
        run: ./gradlew testDebugUnitTest -Dnet.bytebuddy.experimental=true
        
      # Run instrumentation tests on Android emulator
      - name: Run Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          working-directory: ./code
          script: ./gradlew connectedDebugAndroidTest -Dnet.bytebuddy.experimental=true

      # Upload test reports (only if tests run)
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            code/app/build/reports/tests/
            code/app/build/reports/androidTests/
